#Если Сервер Или ТолстыйКлиентОбычноеПриложение  Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Сообщение = СобратьСообщениеБоту(ОписаниеПроблемы, Комментарий, Специалист, Клиент, ДатаПроведенияРабот, ВремяНачалаРабот, ВремяОкончанияРабот);
		СообщениеТГБоту(Сообщение);
	Иначе
		ДокументИзменен = Ложь;
		ОбщегоНазначения.СообщитьПользователю("Привет");
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Специалист, Клиент, ДатаПроведенияРабот, ВремяНачалаРабот,
																	  | ВремяОкончанияРабот, ОписаниеПроблемы, Комментарий");
		Сообщение = СобратьСообщениеБоту(Реквизиты.ОписаниеПроблемы, Реквизиты.Комментарий, Реквизиты.Специалист, Реквизиты.Клиент,
										 Реквизиты.ДатаПроведенияРабот, Реквизиты.ВремяНачалаРабот, Реквизиты.ВремяОкончанияРабот);
		
		Если Реквизиты.Специалист <> Специалист Тогда
			ДокументИзменен = Истина;
			Сообщение = Сообщение + Символы.ПС + "ВНИМАНИЕ! Изменен выполняющий работы специалист.";
		КонецЕсли;
		Если Реквизиты.ДатаПроведенияРабот <> ДатаПроведенияРабот Тогда
			ДокументИзменен = Истина;
			Сообщение = Сообщение + Символы.ПС + "ВНИМАНИЕ! Изменена дата проведения работ.";
		КонецЕсли;
		Если Реквизиты.ВремяНачалаРабот <> ВремяНачалаРабот Тогда
			ДокументИзменен = Истина;
			Сообщение = Сообщение + Символы.ПС + "ВНИМАНИЕ! Изменено время начала работ.";
		КонецЕсли;
		Если Реквизиты.ВремяОкончанияРабот <> ВремяОкончанияРабот Тогда
			ДокументИзменен = Истина;
			Сообщение = Сообщение + Символы.ПС + "ВНИМАНИЕ! Изменено время окончания работ.";
		КонецЕсли;

		Если ДокументИзменен Тогда
			СообщениеТГБоту(Сообщение);
		КонецЕсли;		
	КонецЕсли;
							
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Дата КАК Дата,
		|	ВКМ_ОбслуживаниеКлиента.Клиент КАК Клиент,
		|	ВКМ_ОбслуживаниеКлиента.Договор КАК Договор,
		|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
		|	ДоговорыКонтрагентов.ВКМ_ДатаНачала КАК НачалоДействия,
		|	ДоговорыКонтрагентов.ВКМ_ДатаЗавершения КАК ОкончаниеДействия,
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник = &Сотрудник) КАК
		|				ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|			ПО (ВКМ_ОбслуживаниеКлиента.Специалист = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник)
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|			ПО (ВКМ_ОбслуживаниеКлиента.Договор = ДоговорыКонтрагентов.Ссылка)
		|		ПО (ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = ВКМ_ОбслуживаниеКлиента.Ссылка)
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОбслуживаниеКлиента.Дата,
		|	ВКМ_ОбслуживаниеКлиента.Клиент,
		|	ВКМ_ОбслуживаниеКлиента.Договор,
		|	ВКМ_ОбслуживаниеКлиента.Специалист,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот,
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы,
		|	ДоговорыКонтрагентов.ВидДоговора,
		|	ДоговорыКонтрагентов.ВКМ_ДатаНачала,
		|	ДоговорыКонтрагентов.ВКМ_ДатаЗавершения";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
			ОбщегоНазначения.СообщитьПользователю("Проведение невозможно. Указаный договор не является договором абонентского обслуживания.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если Не (Дата >= НачалоДня(Выборка.НачалоДействия) И Дата <= КонецДня(Выборка.ОкончаниеДействия)) Тогда
			ОбщегоНазначения.СообщитьПользователю("Проведение невозможно. Срок действия договора закончился либо не наступил.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если Выборка.ПроцентОтРабот = Null Тогда
			ОбщегоНазначения.СообщитьПользователю("Проведение невозможно. Не заполнены данные регистра ""Условия оплаты сотрудников"" на дату проведения документа.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	
		Если ЗначениеЗаполнено(Выборка.ЧасыКОплатеКлиенту) Тогда
			Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
			
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.Период = Выборка.Дата;
			Движение.Клиент = Выборка.Клиент;
			Движение.Договор = Выборка.Договор;
			Движение.КоличествоЧасов = Выборка.ЧасыКОплатеКлиенту;
			Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * Выборка.СтоимостьЧасаРаботы;
			
			Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
			
			Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
			Движение.Период = Выборка.Дата;
			Движение.Сотрудник = Выборка.Специалист;
			Движение.ЧасовКОплате = Выборка.ЧасыКОплатеКлиенту;
			Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * Выборка.СтоимостьЧасаРаботы * Выборка.ПроцентОтРабот / 100;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СобратьСообщениеБоту(ОписаниеПроблемы, Комментарий, Специалист, Клиент, ДатаПроведенияРабот, ВремяНачалаРабот, ВремяОкончанияРабот) Экспорт
		
	Если ЗначениеЗаполнено(ОписаниеПроблемы) Тогда
		Сообщение = "Задача." + Символы.ПС + ОписаниеПроблемы + Символы.ПС;
		
		Если ЗначениеЗаполнено(Комментарий) Тогда
			Сообщение = Сообщение + "Коментарий." + Символы.ПС + Комментарий + Символы.ПС;
		КонецЕсли;
		Если ЗначениеЗаполнено(Специалист) Тогда
			Сообщение = СтрШаблон("Исполнитель: %1." + Символы.ПС + "Клиент: %2", ВРег(Специалист), Клиент) + Символы.ПС + Символы.ПС + Сообщение;
		КонецЕсли;
		Если ЗначениеЗаполнено(ДатаПроведенияРабот) Тогда
			Сообщение = Сообщение + Символы.ПС + СтрШаблон("Дата проведения работ: %1", Формат(ДатаПроведенияРабот, "ДЛФ=DD;"));
		КонецЕсли;
		Если ЗначениеЗаполнено(ВремяНачалаРабот) Тогда
			Сообщение = Сообщение + СтрШаблон(" с %1", Формат(ВремяНачалаРабот, "ДЛФ=T;"));
		КонецЕсли;
		Если ЗначениеЗаполнено(ВремяОкончанияРабот) Тогда
			Сообщение = Сообщение + СтрШаблон(" до %1.", Формат(ВремяОкончанияРабот, "ДЛФ=T;"));
		КонецЕсли;
		
		Сообщение = Сообщение + Символы.ПС + Символы.ПС +СтрШаблон("Сообщение отправлено: %1.", ТекущаяДатаСеанса());
	КонецЕсли;
	
	Возврат Сообщение;
	
КонецФункции

Процедура СообщениеТГБоту(Сообщение) Экспорт
	СправочникОбъект = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
	СправочникОбъект.ТекстСообщения = Сообщение;
	СправочникОбъект.Записать();
КонецПроцедуры

#КонецОбласти

#КонецЕсли
